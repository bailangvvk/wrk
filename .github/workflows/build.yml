name: Build & Push wrk (Multiarch)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
        include:
          - arch: amd64
            platform: linux/amd64
            use_qemu: false
          - arch: arm64
            platform: linux/arm64
            use_qemu: true

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU (only for arm64)
        if: matrix.use_qemu == 'true'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push wrk image (arch=${{ matrix.arch }})
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            bailangvkinag/wrk:${{ matrix.arch }}

  manifest:
    name: Create & Push multiarch manifest
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push manifest
        run: |
          docker manifest create bailangvkinag/wrk:latest \
            --amend bailangvkinag/wrk:amd64 \
            --amend bailangvkinag/wrk:arm64
          docker manifest push bailangvkinag/wrk:latest
